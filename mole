#!/bin/bash
#xpodra03 Jiri Podrazil

POSIXLY_CORRECT=yes

export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

#######TODO
#   !!!PRIORITA!!!             
#   !!!PRIORITA!!!  zmenit Filtry na substringi
#                   secret_log vubec neni hotovy
#                   formatovani sloupcu ve funkci list
#                   
print_help()
{
    echo -e "Usage: \tmole -h"
    echo -e "\tmole [-g GROUP] FILE"
    echo -e "\t\tFILE will be open by yourEditor. Defaul is vim"
    echo -e "\tmole [-m] [FILTERS] [DIRECTORY]"
    echo -e "\t\t"
    echo -e "\tmole list [FILTERS] [DIRECTORY]:"

    echo -e ""
    echo -e "\texport MOLE_RC=yourFILE"
    echo -e "\t\tYou need to set file, where the record will be saved"

    echo -e ""
    echo -e "\texport EDITOR=yourEditor"
    echo -e "\t\tYou can change the editor. Defaul is vim"


    echo -e "\t"
    echo -e "\texport MOLE_RC=yourFILE"
    echo -e "\t\tYou need to set file, where the record will be saved"
    
    if [ "$LOG_FILES" == "" ]; then       
        LOG_FILES="Have not been set yet"    
    fi
    echo -e "\t\tCurrent record file is:\t$LOG_FILES"
    if [ "$LOG_FILES" == "Have not been set yet" ]; then       
        LOG_FILES=""    
    fi


    echo $LOG_FILES
}


FILTER=""               
DATE=""                     #format YYYY-MM-DD
LOG_FILES=$MOLE_RC          #
EDIT=$EDITOR                #default EDITOR is vim. User can change it by this variable
DATE_A="0000-00-00"         #records after this date. others are ignored
DATE_B="9999-99-99"         #records before this date. others are ignored
FILE=""                     #file that user want open
DIRECTORY=""                #directory where user want open file
GROUP="-"                    #variable for file GROUP 
COMMAND=""
RECORD=""                  #varialble for command (list, secret-log)


## store passing argument
while [ "$#" -gt 0 ]; do
    case "$1" in
    -h)
        print_help
        exit 0
        ;;
    -a)
        DATE_A="$2"
        shift
        shift
        ;;
    -b)
        DATE_B="$2"
        shift
        shift
        ;;
    -g)
        GROUP="$2"
        shift
        shift
        ;;
    -m)     #DOTO
        
        shift
        shift
        ;;
    *)                              
        if [ -z "$COMMAND" ];then         
            COMMAND="$1"
            shift
        else                      
            exit 1
        fi
        ;;
    esac
done



##list
##display list of records with filters
if [ "$COMMAND" == "list" ]; then       
    ##argumets in order:
    #   DIRECTORY       $1
    #   FILE            $2
    #   GROUP           $3
    #   DATE            $4
    
    awk -F, -v GROUP=$GROUP -v DATE_A=$DATE_A -v DATE_B=$DATE_B ' ((index($3, GROUP) != 0)&&($4>DATE_A)&&($4<DATE_B)) {print "." $2 ":\t" GROUP}' $MOLE_RC | column -s ',' -t  
    
    
    

    
fi

##secret_log   DOTODOTODOTODOTODOTODOTO!!!!!!!!!!!!!!!!!!
if [ "$COMMAND" == "secret-log" ]; then         
    #secret-log DOTO
    echo "jeste neni hotovo"
fi


##file/directory is not set
##pick random file in current directory, and save if into var COMMAND
if [ "$COMMAND" == "" ]; then         
    COMMAND=($(ls | shuf))
fi


##Open FILE/DERECTORY
##passed argument is not "list" or "sec-log" and it is not empty, so it has to by file, or file dicertory
if [ "$COMMAND" != "list" ] && [ "$COMMAND" != "secret-log" ] && [ "$COMMAND" != "" ]; then
    
    ##Passed argument is DIRECTORY
    ##Pick random FILE, and save to COMMAND (it will be opened later)
    if [ -d $COMMAND ]; then
        COMMAND=($(ls $COMMAND| shuf))
    fi

    
    DIRECTORY=($(pwd))
    DATE=($(date +%F_%H-%M-%S))
    
    ##Make record about opening file
    ##If was FILE opened before, it just append another DATE and GROUP
    awk -F, -v MOLE_RC=$MOLE_RC -v DIRECTORY=$DIRECTORY -v COMMAND=$COMMAND -v GROUP=$GROUP -v DATE=$DATE -v RECORD="" 'NR >0{
    
    ##Test if FILE is already in MORE_RC
    ##If yes, than it is not the first time opening it
    if($2 == COMMAND)
        {found=1}1;
    
    ##Append another DATE to argument $4
    if ($2 == COMMAND){
        system("sed -i \"s/"$4"/"$4"_"DATE"/g\" $MOLE_RC")    
    }
    ##Append another GROUP to argument $3
    if (($2 == COMMAND)&&($3!=GROUP)&&($3!="")){
        system("sed -i \"s/"$3"/"$3"_"GROUP"/g\" $MOLE_RC");   
    }
    
    }   


    END {
        ##If this FILE havent been opened yet
        ##  =>make a new record
        if (!found)
            print DIRECTORY","COMMAND","GROUP","DATE >> MOLE_RC;


        ##IF FILE have been epened before
        ## =>Edit GROUP and DATE
        #if ((found)&&(($3 != GROUP)||($3 != "")))
        #   print $2;


    }' $MOLE_RC | column -s ','  
    


    ##check which EDITOR user want to use
    if [ "$EDIT" != "vi" ] && [ "$EDIT" != "" ]; then
        #not dafault editor
        ##open FILE with passed EDITOR
        $EDIT $COMMAND            

    else
        vi $COMMAND     ##dafaul editor is vim   
    fi
fi

exit
